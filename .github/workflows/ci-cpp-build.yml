name: C++ Build, Test, and Generate Report

on:
  push:
    branches: [main, hw]
  pull_request:
    branches: [main, hw]

jobs:
  build-docker:
    uses: ./.github/workflows/docker-build.yml

  test:
    name: Build and Test
    needs: build-docker
    runs-on: ubuntu-latest
    timeout-minutes: 15

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: cpp_course-image

      - name: Load Docker image
        run: docker load -i cpp_course_image.tar

      - name: Run tests in container
        id: run-tests
        run: |
          mkdir -p test-results
          
          # Запускаем тесты и сохраняем статус (0 = успех, 1 = провал)
          docker run --name cpp_course_container \
            -v ${{ github.workspace }}:/workspace \
            bmstu_cpp_course-bmstu:latest \
            bash -c "cd /workspace && \
                    mkdir -p build && \
                    cd build && \
                    cmake .. -DCMAKE_EXPORT_COMPILE_COMMANDS=ON -DCMAKE_CXX_FLAGS='-fprofile-arcs -ftest-coverage' && \
                    cmake --build . && \
                    cd .. && \
                    mkdir -p test-results && \
                    TEST_FAILURE=0 && \
                    for test_bin in \$(find build/tasks -type f -executable); do \
                      echo \"Running \$test_bin\" && \
                      \$test_bin --gtest_output=xml:test-results/\$(basename \$test_bin).xml || TEST_FAILURE=1; \
                    done && \
                    cp -r test-results/* /workspace/test-results/ && \
                    exit \$TEST_FAILURE"

          # Проверяем, есть ли результаты тестов
          echo "Test results:"
          ls -la test-results/

      - name: Upload test results (XML)
        if: always()  # Загружаем артефакты даже при провале
        uses: actions/upload-artifact@v4
        with:
          name: test_results_xml
          path: test-results/
          if-no-files-found: warn
          retention-days: 5

  generate-report:
    name: Generate HTML Report
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 10

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download test results (XML)
        uses: actions/download-artifact@v4
        with:
          name: test_results_xml
          path: test-results/

      - name: Install xsltproc
        run: sudo apt-get install -y xsltproc

      - name: Apply XSLT transformation
        run: |
          for xml_file in test-results/*.xml; do
            xsltproc transform.xsl "$xml_file" > "${xml_file%.xml}.html"
          done

      - name: Upload HTML report
        uses: actions/upload-artifact@v4
        with:
          name: test_report_html
          path: test-results/*.html
          if-no-files-found: warn
          retention-days: 5
